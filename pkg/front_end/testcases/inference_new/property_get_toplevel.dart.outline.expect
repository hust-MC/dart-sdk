library test;
import self as self;
import "dart:core" as core;

class C extends core::Object {
  field core::int* field;
  synthetic constructor •() → self::C*
    ;
  get getter() → core::int*
    ;
  method function() → core::int*
    ;
  abstract member-signature get _identityHashCode() → core::int*;
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*;
  abstract member-signature operator ==(dynamic other) → core::bool*;
  abstract member-signature get hashCode() → core::int*;
  abstract member-signature method toString() → core::String*;
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic;
  abstract member-signature get runtimeType() → core::Type*;
}
static field self::C* c;
static field core::int* field_ref;
static field core::int* getter_ref;
static field () →* core::int* function_ref;
static field core::List<core::int*>* field_ref_list;
static field core::List<core::int*>* getter_ref_list;
static field core::List<() →* core::int*>* function_ref_list;
static method main() → dynamic
  ;
