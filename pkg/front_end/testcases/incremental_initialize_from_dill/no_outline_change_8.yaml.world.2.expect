main = <No Member>;
library from "org-dartlang-test:///main.dart" as main {

  class Foo extends dart.core::Object {
    synthetic constructor •() → main::Foo*
      : super dart.core::Object::•()
      ;
    get x() → dart.core::String* {
      return "x #2";
    }
    set x(dart.core::String* x) → void {}
    abstract member-signature get _identityHashCode() → dart.core::int*;
    abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → dart.core::bool*;
    abstract member-signature method _simpleInstanceOf(dynamic type) → dart.core::bool*;
    abstract member-signature method _simpleInstanceOfTrue(dynamic type) → dart.core::bool*;
    abstract member-signature method _simpleInstanceOfFalse(dynamic type) → dart.core::bool*;
    abstract member-signature operator ==(dynamic other) → dart.core::bool*;
    abstract member-signature get hashCode() → dart.core::int*;
    abstract member-signature method toString() → dart.core::String*;
    abstract member-signature method noSuchMethod(dart.core::Invocation* invocation) → dynamic;
    abstract member-signature get runtimeType() → dart.core::Type*;
  }
  static method main() → dynamic {
    main::Foo* foo = new main::Foo::•();
    dart.core::print(foo.{main::Foo::x});
    foo.{main::Foo::x} = "hello";
  }
}
