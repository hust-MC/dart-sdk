library redirecting_factory_constructors.chain_test;
import self as self;
import "dart:core" as core;

class A extends core::Object {
  static field dynamic _redirecting# = <dynamic>[self::A::first, self::A::second];
  constructor •() → self::A*
    : super core::Object::•()
    ;
  static factory first() → self::A*
    let<BottomType> #redirecting_factory = self::A::• in invalid-expression;
  static factory second() → self::A*
    let () →* self::A* #redirecting_factory = self::A::first in invalid-expression;
  abstract member-signature get _identityHashCode() → core::int*;
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*;
  abstract member-signature operator ==(dynamic other) → core::bool*;
  abstract member-signature get hashCode() → core::int*;
  abstract member-signature method toString() → core::String*;
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic;
  abstract member-signature get runtimeType() → core::Type*;
}
static method main() → dynamic {
  new self::A::•();
}
