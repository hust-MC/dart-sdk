library;
//
// Problems in library:
//
// pkg/front_end/testcases/general_nnbd_opt_out/incomplete_field_formal_parameter.dart:8:11: Error: Expected '.' before this.
//   C.a(this);
//           ^
//
// pkg/front_end/testcases/general_nnbd_opt_out/incomplete_field_formal_parameter.dart:8:11: Error: Expected an identifier, but got ')'.
//   C.a(this);
//           ^
//
// pkg/front_end/testcases/general_nnbd_opt_out/incomplete_field_formal_parameter.dart:9:12: Error: Expected an identifier, but got ')'.
//   C.b(this.);
//            ^
//
// pkg/front_end/testcases/general_nnbd_opt_out/incomplete_field_formal_parameter.dart:10:11: Error: Expected '.' before this.
//   C.c(this, p);
//           ^
//
// pkg/front_end/testcases/general_nnbd_opt_out/incomplete_field_formal_parameter.dart:10:11: Error: Expected an identifier, but got ','.
//   C.c(this, p);
//           ^
//
// pkg/front_end/testcases/general_nnbd_opt_out/incomplete_field_formal_parameter.dart:11:12: Error: Expected an identifier, but got ','.
//   C.d(this., p);
//            ^
//
import self as self;
import "dart:core" as core;

class C extends core::Object {
  constructor a() → self::C*
    ;
  constructor b() → self::C*
    ;
  constructor c() → self::C*
    ;
  constructor d() → self::C*
    ;
  abstract member-signature get _identityHashCode() → core::int*;
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*;
  abstract member-signature operator ==(dynamic other) → core::bool*;
  abstract member-signature get hashCode() → core::int*;
  abstract member-signature method toString() → core::String*;
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic;
  abstract member-signature get runtimeType() → core::Type*;
}
