library;
import self as self;
import "dart:core" as core;

class Operators extends core::Object {
  synthetic constructor •() → self::Operators*
    ;
  operator +(dynamic other) → dynamic
    ;
  operator &(dynamic other) → dynamic
    ;
  operator ~() → dynamic
    ;
  operator |(dynamic other) → dynamic
    ;
  operator ^(dynamic other) → dynamic
    ;
  operator /(dynamic other) → dynamic
    ;
  operator ==(dynamic other) → core::bool*
    ;
  operator >(dynamic other) → dynamic
    ;
  operator >=(dynamic other) → dynamic
    ;
  operator [](dynamic index) → dynamic
    ;
  operator []=(dynamic index, dynamic value) → void
    ;
  operator <<(dynamic other) → dynamic
    ;
  operator <(dynamic other) → dynamic
    ;
  operator <=(dynamic other) → dynamic
    ;
  operator *(dynamic other) → dynamic
    ;
  operator %(dynamic other) → dynamic
    ;
  operator >>(dynamic other) → dynamic
    ;
  operator -(dynamic other) → dynamic
    ;
  operator ~/(dynamic other) → dynamic
    ;
  operator unary-() → dynamic
    ;
  abstract member-signature get _identityHashCode() → core::int*;
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*;
  abstract member-signature get hashCode() → core::int*;
  abstract member-signature method toString() → core::String*;
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic;
  abstract member-signature get runtimeType() → core::Type*;
}
static method main(dynamic arguments) → dynamic
  ;
