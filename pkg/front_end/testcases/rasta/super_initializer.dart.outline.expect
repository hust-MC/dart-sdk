library;
import self as self;
import "dart:core" as core;

class Super extends core::Object {
  constructor arg0() → self::Super*
    ;
  constructor arg1(dynamic a) → self::Super*
    ;
  constructor arg2(dynamic a, dynamic b) → self::Super*
    ;
  abstract member-signature get _identityHashCode() → core::int*;
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*;
  abstract member-signature operator ==(dynamic other) → core::bool*;
  abstract member-signature get hashCode() → core::int*;
  abstract member-signature method toString() → core::String*;
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic;
  abstract member-signature get runtimeType() → core::Type*;
}
class Sub extends self::Super {
  field dynamic field;
  constructor arg0() → self::Sub*
    ;
  constructor arg1(dynamic a) → self::Sub*
    ;
  constructor arg2(dynamic a, dynamic b) → self::Sub*
    ;
}
