library test;
import self as self;
import "dart:core" as core;

import "org-dartlang-testcase:///infer_statics_with_method_invocations_a.dart";

class T extends core::Object {
  static final field self::T* foo;
  synthetic constructor •() → self::T*
    ;
  static method m1(core::String* m) → self::T*
    ;
  static method m2(dynamic e) → core::String*
    ;
  abstract member-signature get _identityHashCode() → core::int*;
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*;
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*;
  abstract member-signature operator ==(dynamic other) → core::bool*;
  abstract member-signature get hashCode() → core::int*;
  abstract member-signature method toString() → core::String*;
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic;
  abstract member-signature get runtimeType() → core::Type*;
}
static method main() → dynamic
  ;

library;
import self as self2;
import "dart:core" as core;

static method m3(core::String* a, core::String* b, [dynamic a1, dynamic a2]) → dynamic
  ;
static method main() → dynamic
  ;
